VERSION 5.00
Begin VB.Form frmRelfxhid 
   ClientHeight    =   3405
   ClientLeft      =   1695
   ClientTop       =   3270
   ClientWidth     =   12120
   ForeColor       =   &H80000008&
   KeyPreview      =   -1  'True
   LinkTopic       =   "Relfxhid"
   LockControls    =   -1  'True
   MDIChild        =   -1  'True
   ScaleHeight     =   3405
   ScaleWidth      =   12120
   Begin IRRIG.GPainel Painel 
      Height          =   3390
      Index           =   0
      Left            =   15
      TabIndex        =   10
      TabStop         =   0   'False
      Top             =   15
      Width           =   12090
      _ExtentX        =   21325
      _ExtentY        =   5980
      BevelOuter      =   0
      Stretch         =   -1  'True
      Begin IRRIG.GBotao botCancela 
         Height          =   360
         Left            =   4485
         TabIndex        =   8
         Top             =   1605
         Width           =   1485
         _ExtentX        =   0
         _ExtentY        =   0
         ForeColor       =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Caption         =   "Cancela"
         CaptionAlign    =   4
         CaptionOffset   =   50
      End
      Begin IRRIG.GBotao botConfImp 
         Height          =   360
         Left            =   11205
         TabIndex        =   7
         Top             =   2565
         Width           =   360
         _ExtentX        =   0
         _ExtentY        =   0
         ForeColor       =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         CaptionOffset   =   50
      End
      Begin IRRIG.GBotao botOk 
         Height          =   360
         Left            =   2985
         TabIndex        =   0
         Top             =   1605
         Width           =   1485
         _ExtentX        =   0
         _ExtentY        =   0
         ForeColor       =   0
         BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Caption         =   "Prossegue"
         CaptionAlign    =   4
         CaptionOffset   =   50
      End
      Begin VB.PictureBox picBox 
         BorderStyle     =   0  'None
         ForeColor       =   &H80000008&
         Height          =   1395
         Index           =   0
         Left            =   75
         ScaleHeight     =   1395
         ScaleWidth      =   1455
         TabIndex        =   11
         Top             =   75
         Width           =   1455
      End
      Begin IRRIG.GPainel Painel 
         Height          =   240
         Index           =   1
         Left            =   4440
         TabIndex        =   13
         TabStop         =   0   'False
         Top             =   2640
         Width           =   2280
         _ExtentX        =   4022
         _ExtentY        =   423
         BevelOuter      =   0
         Stretch         =   -1  'True
         Begin VB.OptionButton opcPainel1Cp 
            Caption         =   "Janela"
            BeginProperty Font 
               Name            =   "Microsoft Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   240
            Index           =   0
            Left            =   0
            TabIndex        =   1
            TabStop         =   0   'False
            Top             =   0
            Width           =   915
         End
         Begin VB.OptionButton opcPainel1Cp 
            Caption         =   "Impressora"
            BeginProperty Font 
               Name            =   "Microsoft Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   240
            Index           =   1
            Left            =   990
            TabIndex        =   2
            TabStop         =   0   'False
            Top             =   0
            Width           =   1320
         End
         Begin VB.Label labopcPainel1 
            BorderStyle     =   1  'Fixed Single
            Height          =   120
            Left            =   675
            TabIndex        =   14
            Top             =   180
            Visible         =   0   'False
            Width           =   240
         End
      End
      Begin IRRIG.GPainel Painel 
         Height          =   240
         Index           =   2
         Left            =   1005
         TabIndex        =   16
         TabStop         =   0   'False
         Top             =   2610
         Width           =   2010
         _ExtentX        =   3545
         _ExtentY        =   423
         BevelOuter      =   0
         Stretch         =   -1  'True
         Begin VB.OptionButton opcPainel2Cp 
            Caption         =   "Todas"
            BeginProperty Font 
               Name            =   "Microsoft Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   240
            Index           =   0
            Left            =   0
            TabIndex        =   3
            TabStop         =   0   'False
            Top             =   0
            Width           =   905
         End
         Begin VB.OptionButton opcPainel2Cp 
            Caption         =   "Páginas"
            BeginProperty Font 
               Name            =   "Microsoft Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   240
            Index           =   1
            Left            =   975
            TabIndex        =   4
            TabStop         =   0   'False
            Top             =   0
            Width           =   1050
         End
         Begin VB.Label labopcPainel2 
            BorderStyle     =   1  'Fixed Single
            Height          =   120
            Left            =   665
            TabIndex        =   17
            Top             =   180
            Visible         =   0   'False
            Width           =   240
         End
      End
      Begin VB.TextBox txtCp 
         Appearance      =   0  'Flat
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   3090
         MaxLength       =   254
         TabIndex        =   5
         TabStop         =   0   'False
         Top             =   2610
         Width           =   465
      End
      Begin VB.VScrollBar scrVtxtCampo1 
         Height          =   285
         LargeChange     =   10
         Left            =   8190
         Max             =   0
         Min             =   32767
         TabIndex        =   19
         TabStop         =   0   'False
         Top             =   2625
         Width           =   195
      End
      Begin VB.TextBox txtCp 
         Appearance      =   0  'Flat
         BorderStyle     =   0  'None
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   285
         Index           =   1
         Left            =   7845
         MaxLength       =   254
         MultiLine       =   -1  'True
         TabIndex        =   6
         TabStop         =   0   'False
         Top             =   2625
         Width           =   330
      End
      Begin VB.CommandButton bottxtCampo2 
         Height          =   270
         Index           =   1
         Left            =   2640
         Style           =   1  'Graphical
         TabIndex        =   25
         TabStop         =   0   'False
         Top             =   1650
         Width           =   255
      End
      Begin VB.CommandButton bottxtCampo2 
         Height          =   270
         Index           =   2
         Left            =   2385
         Style           =   1  'Graphical
         TabIndex        =   26
         TabStop         =   0   'False
         Top             =   1650
         Width           =   255
      End
      Begin VB.TextBox txtCp 
         Alignment       =   1  'Right Justify
         Appearance      =   0  'Flat
         BorderStyle     =   0  'None
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   270
         Index           =   2
         Left            =   1320
         TabIndex        =   9
         Top             =   1650
         Width           =   1050
      End
      Begin VB.Label Label 
         AutoSize        =   -1  'True
         Caption         =   "Destino:"
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   240
         Index           =   0
         Left            =   3630
         TabIndex        =   12
         Top             =   2640
         Width           =   735
      End
      Begin VB.Label Label 
         AutoSize        =   -1  'True
         Caption         =   "Intervalo:"
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   240
         Index           =   1
         Left            =   120
         TabIndex        =   15
         Top             =   2610
         Width           =   810
      End
      Begin VB.Label labFdo1 
         Appearance      =   0  'Flat
         BackColor       =   &H80000005&
         BorderStyle     =   1  'Fixed Single
         Height          =   315
         Left            =   7830
         TabIndex        =   18
         Top             =   2610
         Width           =   570
      End
      Begin VB.Label Label 
         AutoSize        =   -1  'True
         Caption         =   "Nº Copias:"
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000008&
         Height          =   240
         Index           =   2
         Left            =   6795
         TabIndex        =   20
         Top             =   2640
         Width           =   960
      End
      Begin VB.Label Label 
         AutoSize        =   -1  'True
         Caption         =   "Impres.:"
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000008&
         Height          =   240
         Index           =   3
         Left            =   8475
         TabIndex        =   21
         Top             =   2640
         Width           =   705
      End
      Begin VB.Label Label 
         Appearance      =   0  'Flat
         BorderStyle     =   1  'Fixed Single
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00FF0000&
         Height          =   300
         Index           =   4
         Left            =   9255
         TabIndex        =   22
         Top             =   2610
         Width           =   1920
      End
      Begin VB.Label Label 
         AutoSize        =   -1  'True
         Caption         =   "Configurações"
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000008&
         Height          =   240
         Index           =   5
         Left            =   75
         TabIndex        =   23
         Top             =   2100
         Width           =   1305
      End
      Begin VB.Line Linha 
         Index           =   0
         X1              =   75
         X2              =   11550
         Y1              =   2430
         Y2              =   2430
      End
      Begin VB.Label labFdo2 
         Appearance      =   0  'Flat
         BackColor       =   &H80000005&
         BorderStyle     =   1  'Fixed Single
         Height          =   300
         Left            =   1305
         TabIndex        =   24
         Top             =   1635
         Width           =   1605
      End
      Begin VB.Label Label 
         AutoSize        =   -1  'True
         Caption         =   "Orçamento:"
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000008&
         Height          =   240
         Index           =   6
         Left            =   195
         TabIndex        =   27
         Top             =   1665
         Width           =   1035
      End
      Begin VB.Label Label 
         AutoSize        =   -1  'True
         Caption         =   "-"
         ForeColor       =   &H80000008&
         Height          =   195
         Index           =   7
         Left            =   11640
         TabIndex        =   28
         Top             =   2925
         Width           =   45
      End
      Begin VB.Label Label 
         Alignment       =   2  'Center
         AutoSize        =   -1  'True
         Caption         =   "Ficha Técnica (Hidroturbo)"
         BeginProperty Font 
            Name            =   "Microsoft Sans Serif"
            Size            =   20.25
            Charset         =   0
            Weight          =   700
            Underline       =   -1  'True
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00000000&
         Height          =   465
         Index           =   8
         Left            =   1515
         TabIndex        =   29
         Top             =   495
         Width           =   5235
      End
   End
End
Attribute VB_Name = "frmRelfxhid"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
'* Sistema...: SISTEMA IRRIGAÇÃO PENÁPOLIS
'* Empresa...: IRRIGAÇÃO PENÁPOLIS
'* Módulo....: Relfxhid
'* Função....: Ficha Técnica
'* CopyRight.: (C)2024 IRRIGAÇÃO PENÁPOLIS
'* Criação...: GAS-2007 - Gerador Automático de Sistemas
'* Data......: 16/08/2024 15:01:48
'* * * * * * *

Option Explicit
DefInt A-Z

Public vgSituacao As Integer                      'situação de edição que do módulo
Public vgCaracteristica As Integer                'caracteristica do módulo
Public vgTipo As Integer                          'tipo do módulo
Public vgPriVez As Integer                        'flag de carregamento do módulo
Public vgFormID As Long                           'identificador único para o módulo
Public vgIdentTab As String                       'nome da tabela principal do módulo
Public vgEmBrowse As Integer                      'flag se o módulo esta em grade
Public vgTemFiltro As Integer                     'flag se tem ou não filtro no módulo
Public vgFiltraSoUm As String                     'flag para filtrar só um registro
Public vgCancelou As Integer                      'flag cancela ou nao o processo do módulo
Public vgQueryAtual As String                     'expressão SQL definada para o módulo
Public vgUltimoTabIndex As Integer                'último campo com foco do módulo

Public vgUltimoFiltro As String                   'último filtro definido no módulo
Public vgUltimaOrdem As String                    'última ordenação feita no módulo
Public vgUltimoFiltroComTit As String             'titulo do último filtro definido no módulo
Public vgUltimaOrdemComTit As String              'titulo da última ordenação feita no módulo
Public vgSQL As String                            'expressão SQL que define o módulo
Public vgFP As New frmPreview                     'formuário de preview do relatório
Public vgVisivel As Boolean                       'se a tela de parâmetros do relatório esta visível
Public vgPosLin As Single                         'posição atual de impressão
Public vgTooltips As New cTooltips                'classe de ajuda para os controes do módulo
Public vgFG As frmGauge                           'formulário do gauge
Public vgQReg As Long                             'quantidade de já feira para o gauge

Dim vgBookPg() As Variant                         'marcador do registro do inicio da página
Dim vgPodeVoltar() As Boolean                     'se pode ou não retroceder para esta página
Dim vgDataInicial As Variant                      'data que iniciou o relatório
Dim vgPrimeiroCab As Integer                      'flag se ja foi impresso o primeiro cabeçlho do relatório
Dim vgFiltroInicial As String                     'filtro inicial do relatório
Dim vgOrdemInicial As String                      'ordem incial do relatório
Dim txtCampo(2) As New FormataCampos              'classe dos compos tipo texto do módulo
Dim vgWidthRel As Single                          'lagura do relatório
Dim vgHeightRel As Single                         'altura do relatório
Dim vgPagRef() As Integer                         'Ordem da página dentro do intervalo
Dim opcPainel1(1) As New FormataCampos
Dim opcPainel2(1) As New FormataCampos
Dim vgDestRel As Integer, vgModoInt As Integer, vgIntPag As String
Dim vgCopias As Integer, OrcamentoTela As Double, Ajuste As String
Public txtvgDestRel As Object, txtOrcamento As Object, lblAjuste As Object
Dim Orcamento As New GRecordSet

Private Function Filtro() As String
  Filtro = " O.[Seqüência do Orçamento] = " & OrcamentoTela
End Function

Private Function Propriedade() As String
 Dim PropOrc As New GRecordSet
 Dim Prop As New GRecordSet
 
 Set PropOrc = vgDb.OpenRecordSet("SELECT [Seqüência Da Propriedade] Seq, [Nome da Propriedade] From Orçamento Where [Seqüência do Orçamento] = " & OrcamentoTela)
 
     If PropOrc!Seq > 0 Then
        Set Prop = vgDb.OpenRecordSet("SELECT [Nome da Propriedade] Nome From Propriedades WHERE [Seqüência Da Propriedade] = " & PropOrc!Seq)
        Propriedade = Prop!Nome
     Else
        Propriedade = PropOrc![Nome da Propriedade]
     End If
   
End Function


Private Function MunProp() As String
 Dim PropOrc As New GRecordSet
 Dim Prop As New GRecordSet
 Dim Munic As New GRecordSet
 
 Set PropOrc = vgDb.OpenRecordSet("SELECT [Seqüência Da Propriedade] Seq, [Seqüência do Município] SeqMun, [Seqüência do Geral] SeqGeral From Orçamento Where [Seqüência do Orçamento] = " & OrcamentoTela)
 
 If PropOrc!Seq > 0 Then
    Set Prop = vgDb.OpenRecordSet("SELECT [Seqüência do Município] SeqMun From Propriedades WHERE [Seqüência Da Propriedade] = " & PropOrc!Seq)
    Set Munic = vgDb.OpenRecordSet("SELECT [Descrição] Mun, UF From Municípios WHERE [Seqüência DO Município] = " & Prop!SeqMun)
    MunProp = Munic!Mun & " - " & Munic!UF
 Else
    Set Prop = vgDb.OpenRecordSet("SELECT [Seqüência do Município] SeqMun From Geral WHERE [Seqüência do Geral] = " & PropOrc!SeqGeral)
    Set Munic = vgDb.OpenRecordSet("SELECT [Descrição] Mun, UF From Municípios WHERE [Seqüência Do Município] = " & Prop!SeqMun)
    MunProp = Munic!Mun & " - " & Munic!UF
 End If
       
End Function


Private Function VazaoAux() As Double
  VazaoAux = ((Orcamento![Area irrigada] * Orcamento![Precipitação bruta] * 10) / (Orcamento![Horas irrigada] * Orcamento![Area tot irrigada em]))
End Function


Private Function VelocidadeDesloca() As Double
 VelocidadeDesloca = Orcamento![Faixa irrigada] / TempoFx1
End Function

Private Function TempoFx1() As Double
  TempoFx1 = (Orcamento![Espaço entre carreadores] * Orcamento![Faixa irrigada] / 10000) * (Orcamento![Precipitação bruta] * 10 / VazaoAux)
End Function

Private Function PrecipLiq() As Double
 PrecipLiq = Orcamento![Precipitação bruta] * 85 / 100
End Function

Private Function VazaoTurno() As Double
  VazaoTurno = Orcamento![Area irrigada] * Orcamento![Precipitação bruta] * 10
End Function


Private Function HF1() As Double
  If Orcamento![Com 1] > 0 Then
     HF1 = (((VazaoAux / Coef1) ^ 1.85) / ((Diam1 / 25.4) / 0.98) ^ 4.87) * 181 * Orcamento![Com 1]
  Else
     HF1 = 0
  End If
End Function

Private Function Coef1() As Double
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT * From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho A])
 Coef1 = Tb!Coeficiente

End Function

Private Function Diam1() As Double
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT * From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho A])
 Diam1 = Tb![DN mm] - (Tb![E mm] * 2)

End Function

Private Function HF2() As Double
  If Orcamento![Com 2] > 0 Then
     HF2 = (((VazaoAux / Coef2) ^ 1.85) / ((Diam2 / 25.4) / 0.98) ^ 4.87) * 181 * Orcamento![Com 2]
  Else
     HF2 = 0
  End If
End Function

Private Function Coef2() As Double
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT * From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho B])
 Coef2 = Tb!Coeficiente

End Function

Private Function Diam2() As Double
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT * From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho B])
 Diam2 = Tb![DN mm] - (Tb![E mm] * 2)

End Function

Private Function HF3() As Double
  If Orcamento![Com 3] > 0 Then
     HF3 = (((VazaoAux / Coef3) ^ 1.85) / ((Diam3 / 25.4) / 0.98) ^ 4.87) * 181 * Orcamento![Com 3]
  Else
     HF3 = 0
  End If
End Function


Private Function Coef3() As Double
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT * From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho C])
 Coef3 = Tb!Coeficiente

End Function

  
Private Function Diam3() As Double
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT * From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho C])
 Diam3 = Tb![DN mm] - (Tb![E mm] * 2)

End Function

Private Function AlturaManometrica() As Double
 AlturaManometrica = Orcamento![Desnivel maximo na area] + Orcamento![Altura de sucção] + Orcamento![Altura do aspersor] + HF1 + HF2 + HF3 + 0.9 + Orcamento![Pressão de serviço]
End Function

Private Function AreaporFx() As Double
  AreaporFx = (Orcamento![Espaço entre carreadores] * Orcamento![Faixa irrigada]) / 10000
End Function


Private Function FaixasIrrigadas() As Double
  FaixasIrrigadas = Orcamento![Horas irrigada] / TempoFx1
End Function

Private Function areapordia() As Double
 areapordia = FaixasIrrigadas * AreaporFx
End Function

Private Function Material1() As String
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT [Modelo da Adutora] From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho A])
 Material1 = Tb![Modelo da Adutora]

End Function

Private Function Material2() As String
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT [Modelo da Adutora] From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho B])
 Material2 = Tb![Modelo da Adutora]

End Function

Private Function Material3() As String
 Dim Tb As New GRecordSet
 
 Set Tb = vgDb.OpenRecordSet("SELECT [Modelo da Adutora] From Adutoras Where [Sequencia da Adutora] = " & Orcamento![Modelo Trecho C])
 Material3 = Tb![Modelo da Adutora]

End Function

Private Function Velo1() As Double
 Velo1 = (VazaoAux / 3600) / (((Diam1 / 2000) ^ 2) * 3.1416)
End Function

Private Function Velo2() As Double
 Velo2 = (VazaoAux / 3600) / (((Diam2 / 2000) ^ 2) * 3.1416)
End Function

Private Function Velo3() As Double
 Velo3 = (VazaoAux / 3600) / (((Diam3 / 2000) ^ 2) * 3.1416)
End Function

Private Function ConsumoEstimado()
 Dim Bcalc As Double
 
 Bcalc = Orcamento!Voltagem * 1.732 * 0.8
 ConsumoEstimado = (Orcamento![Potencia Nominal] * 0.736 * 1000) / Bcalc

End Function

'prepara o intervalo de páginas a ser impresso
Public Property Let vgIntervalPag(ByVal NovoValor As String)
   Dim x As String, z As String, i As Integer, j As Integer, k As Integer
   ReDim vgPagRef(0) As Integer
   vgIntPag$ = NovoValor$
   x$ = Substitui(vgIntPag$, ";", ",", UM_A_UM)
   j = 0
   Do While Len(x$) > 0
      z$ = Parse(x$, ",")
      i = InStr(z$, "-")
      If i > 0 Then
         k = Val(Mid(z$, i + 1))
         i = Val(Left(z$, i - 1))
      Else
         i = Val(z$)
         k = Val(z$)
      End If
      For i = i To k Step ((i > k) ^ (i > k))
         j = j + 1
         ReDim Preserve vgPagRef(j) As Integer
         vgPagRef(j) = i
      Next
   Loop
End Property

'inicializa variaveis (apelidos) coms os campos correspondentes
Private Sub InicializaApelidos(vgComOQue As Integer)
   On Error Resume Next                           'prepara para possíveis erros
   vgDestRel = Val(labopcPainel1.Caption)
   vgModoInt = Val(labopcPainel2.Caption)
   vgIntPag = txtCampo(0).Value
   vgCopias = txtCampo(1).Value
   OrcamentoTela = txtCampo(2).Value
   vgIntervalPag = vgIntPag
   If Err Then Err.Clear                          'se deu algum erro, vamos resetá-lo
End Sub

'poe relacionamento e filtro na lista externa (combobox)
Private Sub PoeRelEFiltroCbo(Index As Integer)
   On Error Resume Next
   Select Case Index
      Case 2
         txtCampo(2).Filter = "([Seqüência do Orçamento] > " & 0 & ") AND [Fatura Proforma] = " & 0 & ""
                           txtCampo(2).PesqSQLExpression = "SELECT Orçamento.[Seqüência do Orçamento], Orçamento.[Data de Emissão], Orçamento.[Seqüência do Geral], " + _
                                                              "Orçamento.[Valor Total do Orçamento] FROM Orçamento WHERE (Orçamento.[Seqüência do Orçamento] > " + CStr(0) + ") AND " + _
                                                              "(Orçamento.[Fatura Proforma] = False)"
   End Select
End Sub

'executa processos/validacoes nos campos do formuário
Public Function Executar(vgOq As String) As String
   Dim vgMsg As String, vgOk As Integer, vgNVez As Integer
   On Error GoTo DeuErro                          'fica na espera de um erro...
   vgMsg$ = ""                                    'retorna uma msg dizendo o motivo
   vgOk = True                                    'se a validação esta OK
   vgNVez = 0                                     'porque não fez o processo/validacoes
   If vgOq = VALIDACOES Then
      InicializaApelidos COM_TEXTBOX
      If vgModoInt = 1 Then
         vgOk = (Len(vgIntPag) > 0)
         vgMsg$ = "Esta informação é necessária"
         If Not vgOk Then txtCampo(0).SetFocus
      End If
      If vgOk Then
         If vgDestRel = 1 Then
            vgOk = (vgCopias > 0)
            vgMsg$ = "Número de cópias tem que ser maior que ZERO!"
            If Not vgOk Then txtCampo(1).SetFocus
         End If
      End If
      If vgOk Then
         vgOk = (OrcamentoTela > 0)
         vgMsg$ = "Seqüência do Orçamento não pode ser vazia!"
         If Not vgOk Then txtCampo(2).SetFocus
      End If
      If vgOk Then vgMsg$ = ""
      DoEvents
   ElseIf vgOq = INICIALIZACOES Then
      InicializaApelidos COM_TEXTBOX
      On Error Resume Next
      opcPainel1(0).Value = True
      opcPainel1(0).CtPri.TabStop = False
      opcPainel2(0).Value = True
      opcPainel2(0).CtPri.TabStop = False
      txtCampo(2).Value = frmOrcament.vgTb![Seqüência do Orçamento]
   ElseIf vgOq = INI_APELIDOS Then
      InicializaApelidos COM_REGISTRO
      ExecutaVisivel
      ExecutaPreValidacao
   End If
   Executar = vgMsg$                              'prepara saida da função
   Exit Function                                  'e cai fora...

DeuErro:
   Select Case Err                                'vamos verificar se deu algum erro
      Case 3197                                   'registro acabou de ser alterado por outro usuário
         Resume
      Case 3046, 3158, 3186, 3187, 3188, 3189, 3218, 3260
         vgNVez = vgNVez + 1                      'outro usuário acessando
         If vgNVez <= 10 Then                     'vamos tentar 10 vezes
            Delay 0.5                             'mais antes espera 1/2 segundo
            Resume                                'antes de tentar
         End If
   End Select
   Executar = Err.Source + "|" + Trim$(Str$(Err)) + "|" + Error$ 'não teve jeito o erro não pode ser evitado...
End Function

'executa a pré-validação dos campos
Private Sub ExecutaPreValidacao()
   Dim Ok As Boolean
   On Error Resume Next                           'prepara para possiveis erros
   Ok = (vgModoInt = 1)
   txtCampo(0).Enabled = (Ok And txtCampo(0).Editable)
   Ok = (vgDestRel = 1)
   txtCampo(1).Enabled = (Ok And txtCampo(1).Editable)
   If Err Then Err.Clear                          'se houve erro, limpa...
End Sub

'coloca os campos visíveis segundo a condição
Private Sub ExecutaVisivel()
   On Error Resume Next                           'prepara para possiveis erros
   Label(7).Visible = (False)
   If Err Then Err.Clear                          'se houve erro, limpa...
End Sub

'evento - quando o conteúdo do campo for alterado
Private Sub txtCp_Change(Index As Integer)
   If vgPriVez Or txtCampo(Index).PriVez Then Exit Sub
   InicializaApelidos COM_TEXTBOX                         'inicializa apelidos com o que esta sendo digitado
   txtCampo(Index).Change
   If Index = 2 Then
      ExecutaVisivel
      ExecutaPreValidacao
   End If
End Sub

'evento - quando o campo receber o foco
Private Sub txtCp_GotFocus(Index As Integer)
         On Error Resume Next
         Select Case Index
         Case 1
            If ValBrasil(txtCp(1).Text) = 0 Then
               txtCampo(1).Value = 1
               txtCp_Change Index
               InicializaApelidos COM_TEXTBOX
               ExecutaVisivel
               ExecutaPreValidacao
            End If
         Case 2
            PoeRelEFiltroCbo 2
            If Len(txtCp(2).Text) = 0 Then
               txtCampo(2).Value = frmOrcament.vgTb![Seqüência do Orçamento]
               txtCp_Change Index
               InicializaApelidos COM_TEXTBOX
               ExecutaVisivel
               ExecutaPreValidacao
            End If
      End Select
   txtCampo(Index).GotFocus
End Sub


'evento - quando qq tecla for digitada no campo
Private Sub txtCp_KeyDown(Index As Integer, KeyCode As Integer, Shift As Integer)
   txtCampo(Index).KeyDown KeyCode, Shift
End Sub

'evento - quando qq tecla for digitada no campo
Private Sub txtCp_KeyPress(Index As Integer, KeyAscii As Integer)
   txtCampo(Index).KeyPress KeyAscii
End Sub

'evento - quando o campo perder o foco
Private Sub txtCp_LostFocus(Index As Integer)
   txtCampo(Index).LostFocus                      'executa LostFocus na classe
   ExecutaVisivel                                 'torna camos visiveis
   ExecutaPreValidacao                            'habilita/desabilita campos
End Sub


'evento - quando uma opção for selecionada
Private Sub opcPainel1Cp_Click(Index As Integer)
   If vgPriVez Then Exit Sub
   If opcPainel1(Index).Locked Then
      opcPainel1(Val(labopcPainel1.Caption)).Value = True
   Else
      If Val(labopcPainel1.Caption) <> opcPainel1(Index).BookMark Then
         labopcPainel1.Caption = Str$(opcPainel1(Index).BookMark)
         InicializaApelidos COM_TEXTBOX
         ExecutaVisivel
         ExecutaPreValidacao
         opcPainel1(Index).Change
      End If
   End If
   opcPainel1(0).CtPri.TabStop = False
   opcPainel1(1).CtPri.TabStop = False
   opcPainel2(0).CtPri.TabStop = False
   opcPainel2(1).CtPri.TabStop = False
End Sub

'evento - quando qq tecla for digitada no campo
Private Sub opcPainel1Cp_KeyPress(Index As Integer, KeyAscii As Integer)
   opcPainel1(Index).KeyPress KeyAscii
End Sub

'evento - quando qq tecla for digitada no campo
Private Sub opcPainel1Cp_KeyDown(Index As Integer, KeyCode As Integer, Shift As Integer)
   opcPainel1(Index).KeyDown KeyCode, Shift
End Sub

'evento - quando o campo receber o foco
Private Sub opcPainel1Cp_GotFocus(Index As Integer)
   opcPainel1(Index).GotFocus
         On Error Resume Next
         Select Case Index
         Case 2
            PoeRelEFiltroCbo 2
      End Select
End Sub

'evento - quando o campo perder o foco
Private Sub opcPainel1Cp_LostFocus(Index As Integer)
   opcPainel1(Index).LostFocus
End Sub

'evento - quando uma opção for selecionada
Private Sub opcPainel2Cp_Click(Index As Integer)
   If vgPriVez Then Exit Sub
   If opcPainel2(Index).Locked Then
      opcPainel2(Val(labopcPainel2.Caption)).Value = True
   Else
      If Val(labopcPainel2.Caption) <> opcPainel2(Index).BookMark Then
         labopcPainel2.Caption = Str$(opcPainel2(Index).BookMark)
         InicializaApelidos COM_TEXTBOX
         ExecutaVisivel
         ExecutaPreValidacao
         opcPainel2(Index).Change
      End If
   End If
   opcPainel1(0).CtPri.TabStop = False
   opcPainel1(1).CtPri.TabStop = False
   opcPainel2(0).CtPri.TabStop = False
   opcPainel2(1).CtPri.TabStop = False
End Sub

'evento - quando qq tecla for digitada no campo
Private Sub opcPainel2Cp_KeyPress(Index As Integer, KeyAscii As Integer)
   opcPainel2(Index).KeyPress KeyAscii
End Sub

'evento - quando qq tecla for digitada no campo
Private Sub opcPainel2Cp_KeyDown(Index As Integer, KeyCode As Integer, Shift As Integer)
   opcPainel2(Index).KeyDown KeyCode, Shift
End Sub

'evento - quando o campo receber o foco
Private Sub opcPainel2Cp_GotFocus(Index As Integer)
   opcPainel2(Index).GotFocus
         On Error Resume Next
         Select Case Index
         Case 2
            PoeRelEFiltroCbo 2
      End Select
End Sub

'evento - quando o campo perder o foco
Private Sub opcPainel2Cp_LostFocus(Index As Integer)
   opcPainel2(Index).LostFocus
End Sub

'evento - inicialização do formulário
Private Sub Form_Load()
   On Error GoTo DeuErro
   Dim x As String
   Screen.MousePointer = vbHourglass
   Caption = LoadGasString(75040)
   vgFormID = 1324
   vgIdentTab = ""
   vgPriVez = True
   vgTipo = TP_RELAT
   vgCaracteristica = F_COMUM
   vgTemFiltro = False
   ReDim vgBookPg(0) As Variant, vgPodeVoltar(0) As Boolean
   Load vgFP
   With vgFP
      vgIntervalPag = ""
      Set .vgFormRel = Me
      .vgContaPg = 0
      vgWidthRel = 520 + .ScaleX(196.9841, vbMillimeters, .ScaleMode)
      vgHeightRel = 720 + .ScaleY(286.8078, vbMillimeters, .ScaleMode)
      .picAux.Width = vgWidthRel
      .picAux.Height = vgHeightRel
      .Caption = LoadGasString(7505) + Me.Caption
      .picInterna.Move 0, 0, vgWidthRel, vgHeightRel
      .picAux.ScaleMode = vbMillimeters
      .picAux.Scale (0, 0)-(196.9841, 286.8078)
   End With
   vgWidthRel = vgWidthRel - 520
   vgHeightRel = vgHeightRel - 720
   vgVisivel = True
   Label(4).Caption = Printer.DeviceName
   vgSituacao = ACAO_NAVEGANDO
   Set botOk.Picture = LoadPicture(LoadGasPicture(66545))
   Set picBox(0).Picture = LoadPicture(LoadGasPicture(66546))
   Set botConfImp.Picture = LoadPicture(LoadGasPicture(66547))
   Set botCancela.Picture = LoadPicture(LoadGasPicture(66548))
   Load vgFP.picFixa(1)
   Set vgFP.picFixa(1).Picture = LoadPicture(LoadGasPicture(66549))
   Load vgFP.picFixa(2)
   Set vgFP.picFixa(2).Picture = LoadPicture(LoadGasPicture(66550))
   Set txtvgDestRel = opcPainel1(0)
   Set txtOrcamento = txtCampo(2)
   Set lblAjuste = Label(7)
   vgFP.picFixa(0).AutoSize = True
   vgFP.picFixa(0).ScaleMode = vbMillimeters
   vgQueryAtual = "SELECT O.[Seqüência do Orçamento], O.[Seqüência do Geral], O.[Data de Emissão], O.[Nome Cliente], O.[Nome da Propriedade], " + _
                     "O.[Seqüência da Propriedade], G.[Razão Social], O.Hidroturbo, O.[Area irrigada], O.[Precipitação bruta], " + _
                     "O.[Horas irrigada], O.[Area tot irrigada em], O.Aspersor, O.[Modelo do aspersor], O.[Pressão de serviço], " + _
                     "O.[Alcance do jato], O.[Espaço entre carreadores], O.[Faixa irrigada], O.[Desnivel maximo na area], O.[Altura do aspersor], " + _
                     "O.[Altura de sucção], O.[Tempo parado antes percurso], O.[Com 1], O.[Com 2], O.[Com 3], O.[Modelo Trecho A], " + _
                     "O.[Modelo Trecho B], O.[Modelo Trecho C], O.[Qtde bomba], O.[Marca bomba], O.[Modelo bomba], O.[Tamanho bomba], " + _
                     "O.[N estagios], O.[Diametro bomba], O.[Pressao bomba], O.[Rendimento bomba], O.[Qtde de Motor], O.[Rotação bomba], " + _
                     "O.[Marca do Motor], O.[Modelo Motor], O.[Nivel de Proteção], O.[Potencia Nominal], O.[Nro de Fases], " + _
                     "O.Voltagem, O.[Modelo hidroturbo], O.Eixos, O.Rodas, O.Pneus, O.Tubos, O.[Bocal Diametro], O.[Entrega Tecnica] " + _
                     "FROM Orçamento O Left Join Geral G On O.[Seqüência do Geral] = G.[Seqüência do Geral]"
   Set Orcamento = vgDb.OpenRecordSet("SELECT TOP 1" + Mid$(vgQueryAtual, 7))
   DefineControles
   vgTooltips.Create
   vgTooltips.AddTool botOk, 0, LoadGasString(75045)
   botOk.Caption = LoadGasString(75046)
   Label(0).Caption = LoadGasString(75047)
   opcPainel1(0).Caption = LoadGasString(75048)
   opcPainel1(1).Caption = LoadGasString(75049)
   Label(1).Caption = LoadGasString(75050)
   opcPainel2(0).Caption = LoadGasString(75051)
   opcPainel2(1).Caption = LoadGasString(75052)
   Label(2).Caption = LoadGasString(75053)
   Label(3).Caption = LoadGasString(75054)
   vgTooltips.AddTool botConfImp, 0, LoadGasString(75055)
   vgTooltips.AddTool botCancela, 0, LoadGasString(75056)
   botCancela.Caption = LoadGasString(75057)
   Label(5).Caption = LoadGasString(75058)
   Label(6).Caption = LoadGasString(75059)
   Label(7).Caption = LoadGasString(75060)
   Label(8).Caption = LoadGasString(75061)
   vgSQL$ = Orcamento.Source
   AjustaTamanho Me
   Executar INICIALIZACOES
   InicializaApelidos COM_TEXTBOX
   ExecutaVisivel
   ExecutaPreValidacao
   txtCampo(1).Value = 1
   Screen.MousePointer = vbDefault
   vgUltimoTabIndex = -1                          'controla lost focus de campos optativos
   vgPriVez = False
   Exit Sub

DeuErro:
   CErr.NumErro = Err
   CErr.FunctionName = "Form_Load"
   CErr.Origem = CStr(vgFormID) + " - " + Me.Caption
   CErr.Show
End Sub


'evento - quando o formulário receber o foco
Private Sub Form_Activate()
   Dim i As Integer
   AtivaForm Me
End Sub

'evento - redefinido o tamanho do formulário
Private Sub Form_Resize()
   AjustaPanFundo Me
End Sub

'define as propriedades das classe dos campos do formuário
Public Sub DefineControles()
 On Error GoTo DeuErro

   Set opcPainel1(0).CtPri = opcPainel1Cp(0)
   Set opcPainel1(0).CtFdo = labopcPainel1
   opcPainel1(0).DataType = 6
   opcPainel1(0).BookMark = 0

   Set opcPainel1(1).CtPri = opcPainel1Cp(1)
   Set opcPainel1(1).CtFdo = labopcPainel1
   opcPainel1(1).DataType = 6
   opcPainel1(1).BookMark = 1

   Set opcPainel2(0).CtPri = opcPainel2Cp(0)
   Set opcPainel2(0).CtFdo = labopcPainel2
   opcPainel2(0).DataType = 6
   opcPainel2(0).BookMark = 0

   Set opcPainel2(1).CtPri = opcPainel2Cp(1)
   Set opcPainel2(1).CtFdo = labopcPainel2
   opcPainel2(1).DataType = 6
   opcPainel2(1).BookMark = 1

   Set txtCampo(0).CtPri = txtCp(0)
   txtCampo(0).DataType = 0
   txtCampo(0).Mask = ""
   txtCampo(0).BoundColumn = ""
   txtCampo(0).ListFields = ""
   txtCampo(0).OrderFields = ""
   txtCampo(0).Relation = ""
   txtCampo(0).Source = ""

   Set txtCampo(1).CtPri = txtCp(1)
   Set txtCampo(1).CtFdo = labFdo1
   Set txtCampo(1).CtScr = scrVtxtCampo1
   txtCampo(1).LargeChange = 10
   txtCampo(1).SmallChange = 1
   txtCampo(1).DataType = 3
   txtCampo(1).Mask = ""
   txtCampo(1).BoundColumn = ""
   txtCampo(1).ListFields = ""
   txtCampo(1).OrderFields = ""
   txtCampo(1).Relation = ""
   txtCampo(1).Source = ""
   txtCampo(1).Value = 1

   Set txtCampo(2).CtPri = txtCp(2)
   Set txtCampo(2).CtFdo = labFdo2
   Set txtCampo(2).CtBot(BOT_LISTA) = bottxtCampo2(BOT_LISTA)
   Set txtCampo(2).CtBot(BOT_COMBO) = bottxtCampo2(BOT_COMBO)
   bottxtCampo2(BOT_LISTA).Caption = "P"
   Set bottxtCampo2(BOT_COMBO).Picture = LoadPicture(LoadGasPicture(3))
   txtCampo(2).DataType = 1
   txtCampo(2).Mask = ""
   txtCampo(2).PesqModoAbertura = 2
   txtCampo(2).PesqFieldCapture = "Orçamento.[Seqüência do Orçamento]"
   txtCampo(2).BoundColumn = "Seqüência do Orçamento"
   txtCampo(2).ListFields = "Seqüência do Orçamento"
   txtCampo(2).OrderFields = "Seqüência do Orçamento"
   txtCampo(2).Relation = ""
   txtCampo(2).Source = "Orçamento"
   txtCampo(2).vgfrmGMCale.grdListaG.AutoRebind = True

 Exit Sub

DeuErro:
  CErr.NumErro = Err
  CErr.FunctionName = "DefineControles0"
  CErr.Origem = CStr(vgFormID) + " - " + Me.Caption
 CErr.Show
End Sub

'inicia impressão do relatório/etiqueta
Public Sub ProssegueExecucao(vgObSaida As Object, Optional ByVal vgNumPg As IMPRIME_PAGINA = 0)
   Dim vgPsm As Integer, vgPsz As Integer, vgPfn As String, vgPor As Integer, x As String, vgSemBookMark As Integer
   Dim i As Integer, vgLimiteInf As Single, vgSqlFiltro As String, vgTemFimRel As Boolean
   Dim vgNParc As Integer, vgNVez As Integer, vgNCop As Integer
   Dim vgEmPapel As Boolean, vgPagOk As Boolean, vgPV As Boolean, vgDifProxReg As Single, vgNumPag As Long, vgSemControlePg As Boolean, Ok As Boolean
   Dim j As Integer, m As Integer, vgQt As Integer, vgPagOrig As Integer, vgNovaPg As Integer, k As Integer, vgIniProc As Boolean, vgTestaPriCab As Boolean
   Screen.MousePointer = vbHourglass              'mostra ampulheta
   vgCancelou = False
   vgTemFimRel = False                            'se tem pendência para ser impressa como fim de página
   vgSemBookMark = 0
   If TypeOf vgObSaida Is Printer Then            'estamos em preview ou impressora?
      vgEmPapel = True                            'imprimindo na impressora, confirma
      GeraLogAcao LoadGasString(296) + " Ficha Técnica"
   Else
      vgEmPapel = False
      vgObSaida.Cls
      vgFP.scrH.Value = 0                         'acerta scroll do preview
      vgFP.scrV.Value = 0
   End If
   vgDataInicial = Now                            'data e hora do inicio do relatório
   vgNovaPg = -1
   vgIniProc = False                              'flag para informar que iniciou procura em navegação (próxima, anterior, última...)

   If vgNumPg = G_IMP_ATUA_PG Then                'solicitou impressão da página atual
      vgNumPg = vgFP.vgContaPg
   End If

   vgNCop = 0                                     'controla num de cop se impressora não tem esta prop
   vgSemControlePg = (False)

OutraCopia:
   On Error GoTo DeuErro                          'vamos cercar erros...

   'abre os recordsets
   vgPV = (vgNumPg = 0 Or (vgEmPapel And vgFP.vgContaPg > 0)) 'veio do botao de prosseguir?
   If vgPV And Not (vgEmPapel And vgFP.vgContaPg > 0) Then
      If TypeOf vgObSaida Is PictureBox Then                  'estamos em preview ou impressora?
         GeraLogAcao LoadGasString(297) + " Ficha Técnica"
      End If
      vgFiltroInicial = "" & Filtro() & ""
      If Len(vgFiltraSoUm) > 0 Then
       If Len(vgFiltroInicial) > 0 Then vgFiltroInicial = "(" + vgFiltroInicial + ") And "
         vgFiltroInicial = vgFiltroInicial + "(" + vgFiltraSoUm + ")"
      End If
      x$ = vgQueryAtual
      If Len(vgUltimoFiltro) > 0 And Len(vgFiltroInicial) > 0 Then
         x$ = InsereSQL(x$, EXP_WHERE, "(" + vgFiltroInicial + ") And (" + vgUltimoFiltro + ")")
      ElseIf Len(vgUltimoFiltro + vgFiltroInicial) > 0 Then
         x$ = InsereSQL(x$, EXP_WHERE, vgFiltroInicial + vgUltimoFiltro)
      End If
      vgOrdemInicial = ExtraiSQL(x$, EXP_ORDERBY)
      If Len(vgUltimaOrdem) > 0 Or Len(vgOrdemInicial) > 0 Then
         x$ = InsereSQL(x$, EXP_ORDERBY, vgOrdemInicial + IIf(Len(vgOrdemInicial) > 0 And Len(vgUltimaOrdem) > 0, ", ", "") + vgUltimaOrdem)
      End If
      Set Orcamento = vgDb.OpenRecordSet(x$)
      If Orcamento.RecordCount = 0 Then
       vgPrimeiroCab = 1
       Screen.MousePointer = vbNormal
       Exit Sub
      End If
      ReDim vgBookPg(0) As Variant                            'cria variável para salvar bookmark
      ReDim vgPodeVoltar(0) As Boolean                        'controle de quebra em filhos
      GoSub IniciaImpressao
   Else
      If vgNumPg >= 0 And (vgEmPapel And vgFP.vgContaPg > 0) Then
         GoSub IniciaImpressao
      End If
      If vgModoInt = 1 Then
         vgPagOrig = vgPagRef(vgFP.vgPagRef)
      Else
         vgPagOrig = vgFP.vgPagRef
      End If
      If vgNumPg > 0 Then                                     'se estiver indo para alguma página específica
         If vgModoInt = 1 Then
            j = 0
            For i = 1 To UBound(vgPagRef)                     'vamos procurar a página solicitada no intervalo de páginas permitidas para o relatório...
               If vgPagRef(i) = vgNumPg Then
                  j = i
                  If i >= vgPagOrig Then                      'se a página encontrada estiver após a página atualamente exibida no relatório...
                     Exit For                                 'cai fora
                  End If
               End If
            Next
            If j = 0 Then
               vgFP.vgContaPg = vgFP.vgContaPg - 1            'para evitar problema na SalvaPagina
               GoTo NaoAchouPg
            End If
            vgFP.vgPagRef = j
         End If
         vgFP.vgNovaPag = vgNumPg
         If vgNumPg > UBound(vgBookPg()) Then
            vgNumPg = UBound(vgBookPg())
         End If
         vgNovaPg = vgNumPg - 1
         vgFP.vgProcuraPg = (vgNumPg <> vgFP.vgNovaPag)
      ElseIf vgNumPg = G_IMP_PROX_PG Or vgNumPg = G_IMP_ANT_PG Then
         i = (vgNumPg = G_IMP_ANT_PG) ^ (vgNumPg = G_IMP_ANT_PG) 'i=+1 para G_IMP_PROX_PG e i=-1 para G_IMP_ANT_PG
         If vgModoInt = 1 Then
            vgFP.vgProcuraPg = (vgPagRef(vgFP.vgPagRef + (i * 1)) > UBound(vgBookPg()))
            If vgFP.vgProcuraPg Then
               vgIniProc = True                                  'flag para informar que iniciamos procura
               vgFP.vgNovaPag = vgPagRef(vgFP.vgPagRef + (i * 1))
               vgNovaPg = UBound(vgBookPg) - 1
               vgFP.vgPagRef = vgFP.vgPagRef + (i * 1)
            Else
               vgNovaPg = vgPagRef(vgFP.vgPagRef + (i * 1)) - 1
            End If
         Else
            vgFP.vgProcuraPg = False
            vgNovaPg = vgFP.vgContaPg + (i * 1) - 1
         End If
      ElseIf vgNumPg = G_IMP_PRI_PG Or vgNumPg = 0 Then
         If vgEmPapel And vgFP.vgContaPg > 0 Then                'se for em papel... e tiver vindo do botão IMPRIME do preview...
            vgPagOrig = vgFP.vgPagRef
         End If
         vgFP.vgProcuraPg = False
         If vgModoInt = 1 Then
            vgNovaPg = vgPagRef(1) - 1
         Else
            vgNovaPg = 0
         End If
      ElseIf vgNumPg = G_IMP_ULT_PG Then
         If vgModoInt = 1 Then
            vgFP.vgProcuraPg = False
            If vgFP.vgUltPagVista <= vgPagRef(UBound(vgPagRef())) Then 'se ainda não visualizou a última página...
               vgNovaPg = UBound(vgBookPg()) - 1                       'vamos posicionar em uma página antes da última disponível (vai incrementar depois)
            Else
               vgNovaPg = vgPagRef(UBound(vgPagRef())) - 1             'posicionar uma página antes da última página do relatório
            End If
         Else
            If UBound(vgBookPg()) > 0 Then
               vgNovaPg = UBound(vgBookPg()) - 1
            End If
            vgFP.vgProcuraPg = True
            vgIniProc = True                                           'flag para informar que iniciamos procura
            vgFP.vgNovaPag = 0
         End If
      End If
   End If
   If vgNovaPg >= 0 Then
      If vgPodeVoltar(vgNovaPg + 1) = False And vgNovaPg > 0 Then
         If Not vgFP.vgProcuraPg Then                                  'se nao esta indo para pg ou ultima pg
            vgFP.vgProcuraPg = True
            vgIniProc = True                                           'flag para informar que iniciamos procura
            vgFP.vgNovaPag = vgNovaPg + 1
         End If
         Do While vgPodeVoltar(vgNovaPg + 1) = False                   'acerto para não deixar voltar página com quebra em filho
            vgNovaPg = vgNovaPg - 1
         Loop
         If vgModoInt = 1 Then
            If vgNumPg < 0 Then
               vgFP.vgPagRef = vgFP.vgPagRef + 1
            End If
         Else
            vgFP.vgPagRef = vgFP.vgNovaPag
         End If
      End If
      vgFP.vgContaPg = vgNovaPg
      If Len(vgBookPg(vgNovaPg + 1)) > 0 Then
         Orcamento.BookMark = vgBookPg(vgNovaPg + 1)
      Else
         vgSemBookMark = 1
      End If
      vgNumPag = vgNovaPg + 1
   Else
      vgFP.vgPagRef = 1
   End If
   vgFP.botPara.Enabled = (vgFP.vgProcuraPg Or vgNumPg = G_IMP_ULT_PG) 'habilita/desabilita stop
   vgPrimeiroCab = True

Volta:

   'Ficha Técnica
   If Orcamento.RecordCount > 0 Then
      If vgNumPg = 0 And Not (vgEmPapel And vgFP.vgContaPg > 0) Then
         Orcamento.MoveLast
         Orcamento.MoveFirst
      End If
      If vgEmPapel And vgNumPg = 0 And vgPrimeiroCab Or (vgNumPg = vgPagOrig And vgEmPapel) Then
         Set vgFG = New frmGauge
         vgQReg = 0
         Load vgFG
         Set vgFG.vgFrmOrigem = Me
         vgFG.MostraGauge
      End If
      vgLimiteInf = 286
      vgDifProxReg = 0
      On Error Resume Next
      Do While Not Orcamento.EOF Or vgSemBookMark = 1
         vgFP.vgFimDoArq = False
         If vgPrimeiroCab Or vgPosLin > vgLimiteInf - 51.25 Then
            vgPosLin = vgPosLin - vgDifProxReg
            vgDifProxReg = 0
            vgPagOk = True
            vgTestaPriCab = True
            GoSub VerificaFimPg
            GoSub OutraFolha
            On Error Resume Next
         End If
         Imprime Orcamento![Faixa irrigada], 90.25, vgPosLin, "F=Verdana|S=12|L=22|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
         Imprime Orcamento![Com 3], 26.19, vgPosLin + 46.49, "F=Verdana|S=12|L=23|JC=22.75", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
         vgPosLin = vgPosLin + 51.25
         vgDifProxReg = 0
         vgDifProxReg = 1
         vgPosLin = vgPosLin + vgDifProxReg
         Orcamento.MoveNext
         If vgEmPapel And vgNumPg = 0 Then
            vgQReg = vgQReg + 1
            If vgModoInt = 1 Then
               If Not vgFP.vgProcuraPg Then
                  vgFG.pgb1.Value = vgFP.vgPagRef * 100 / UBound(vgPagRef())
               End If
            Else
               vgFG.pgb1.Value = vgQReg * 100 / Orcamento.RecordCount
            End If
            If vgFG.vgQuerCancelar Then Exit Do
         End If
      Loop
      vgPosLin = vgPosLin - vgDifProxReg
      vgDifProxReg = 0
      If vgFP.vgProcuraPg And UBound(vgBookPg) <= vgFP.vgContaPg Then               'ops... estava buscando por uma página, e ela não existe (chegou no final do arquivo)!
         If vgNumPg = G_IMP_ULT_PG Then
            vgPrimeiroCab = True
            vgFP.vgProcuraPg = True
            vgNumPg = UBound(vgBookPg())
            If Len(vgBookPg(vgNumPg)) = 0 Then     'se a última não tem bookmark, quer dizer que chegou em fim de arquivo mas tem complemento a imprimir em outra folha
               Do While Len(vgBookPg(vgNumPg)) = 0   'vamos pegar a última página com bookmark válido
                  vgNumPg = vgNumPg - 1
               Loop
               vgFP.vgContaPg = vgNumPg              'vamos voltar para última página com bookmark
               vgNumPg = G_IMP_PROX_PG               'e força navegação para próxima (que será a última)
               vgFP.vgProcuraPg = False              'sem procurar...
            End If
            GoTo OutraCopia
         Else
            vgPrimeiroCab = True
            vgFP.vgProcuraPg = False
            If vgModoInt = 1 Then
               vgPagRef(vgFP.vgPagRef) = -vgFP.vgContaPg - 1        'vamos forçar a exclusão de páginas maiores que a última no vetor de referências
               vgFP.vgContaPg = vgPagRef(vgFP.vgPagRef - 1) - 1
               j = 0
               Do While vgPagRef(vgFP.vgPagRef - 1 - j) - 1 <> 0 And vgPagRef(vgFP.vgPagRef - 1 - j) - 1 > UBound(vgBookPg) And vgFP.vgPagRef - j > 0
                  j = j + 1
                  vgFP.vgContaPg = vgPagRef(vgFP.vgPagRef - 1 - j) - 1
               Loop
               If vgFP.vgContaPg > 0 Then
                  Orcamento.BookMark = vgBookPg(vgFP.vgContaPg + 1)
               Else
                  vgFP.vgContaPg = 0
                  Orcamento.MoveFirst
               End If
            End If
            If vgModoInt = 1 Then
               GoTo Volta
             ElseIf vgFP.vgNovaPag > vgFP.vgContaPg Then
               GoSub RestauraPag
               GoTo NaoAchouPg
            End If
         End If
      ElseIf vgEmPapel And vgNumPg = 0 And vgFP.vgPagRef < UBound(vgPagRef()) Then 'estava imprimindo intervalo de página e parece ter chegado no fim do arquivo
         If Not vgFG.vgQuerCancelar Then
            vgPosLin = vgLimiteInf + 99                  'força um cabec na próxima vez
            vgFP.vgContaPg = 0                           'zera o contador de página
            GoTo Volta                                   'e vamos voltar para imprimir a próxima página
         End If
      End If
   End If

CancelouRel:
   If vgEmPapel Then
      If vgNumPg > 0 And Not vgPrimeiroCab And Not vgFG.vgQuerCancelar Then
         Unload vgFG
         Set vgFG = Nothing
         vgObSaida.EndDoc
      Else
         If vgFG.vgQuerCancelar Then
            vgCancelou = True
            vgObSaida.KillDoc
         Else
            vgObSaida.EndDoc
         End If
         If vgNumPg = 0 And vgPagOrig > 0 Then                      'solicitou impressão de todo relatório pelo preview
            vgFP.vgPagRef = vgPagOrig
            If vgModoInt = 1 Then
               vgFP.vgContaPg = vgPagRef(vgPagOrig)                     'e arruma o número da página
            Else
               vgFP.vgContaPg = vgPagOrig                               'e arruma o número da página
            End If
         End If
         vgNCop = vgNCop - 1
         If vgFG.vgQuerCancelar = False And vgNCop > 0 Then
            Unload vgFG
            Set vgFG = Nothing
            GoTo OutraCopia
         End If
      End If
      With Printer
         .ScaleMode = vgPsm
         .Orientation = vgPor
         .PaperSize = vgPsz
         .FontName = vgPfn
      End With
   Else
      GoSub SalvaPagina
   End If
   GoTo SaiDaSub

VerificaFimPg:
   If Not vgEmPapel And (Not vgTestaPriCab Or vgPrimeiroCab = False) Then
      GoSub SalvaPagina
      If Not vgFP.vgProcuraPg Then                      'se não está procurando por uma página
         If vgFP.vgContaPg <> vgFP.vgNovaPag Then                   'opa... parece que o usuário precionou o STOP
            If vgNumPg = G_IMP_ANT_PG Or vgNumPg = G_IMP_PROX_PG Then 'se estava movendo para próxima página ou anterior
               vgFP.vgContaPg = vgPagOrig                               'vamos restaurar a página original
               If vgNumPg = G_IMP_ANT_PG Then                           'restaura o contador
                  vgFP.vgPagRef = vgFP.vgPagRef + 1
               Else
                  vgFP.vgPagRef = vgFP.vgPagRef - 1
               End If
               GoSub SalvaPagina                    'ajusta a botoeira do preview novamente
            End If
         End If
         GoTo SaiDaSub                          'cai fora
      End If
   ElseIf vgEmPapel And vgNumPg > 0 And Not vgPrimeiroCab Then
      If vgFP.vgContaPg = vgFP.vgNovaPag Then GoTo CancelouRel
   ElseIf vgNumPg = 0 And Not vgPrimeiroCab Then
      If Not vgFP.vgProcuraPg Then
         If vgModoInt = 1 And vgFP.vgPagRef >= UBound(vgPagRef()) Then         'se estava imprimindo intervalo de páginas...
            GoTo CancelouRel                                                     'se chegou à última página do intervalo, cai fora
         End If
         GoSub SalvaInicioPg
      End If
   End If
   Return

OutraFolha:
   If vgEmPapel = False Then
      GoSub SalvaInicioPg
      If vgFP.vgProcuraPg And vgNumPg = G_IMP_ULT_PG Then
         vgFP.txtPag.Text = Trim$(Str$(vgFP.vgContaPg + 1))
         vgFP.txtPag.Refresh
      End If
   ElseIf Not vgSemControlePg Then
      If Not vgPrimeiroCab And Not vgFP.vgProcuraPg Then vgObSaida.NewPage
   End If
   vgFP.vgContaPg = vgFP.vgContaPg + 1
   If vgFP.vgProcuraPg = False Then
    If vgModoInt = 0 Then
     vgFP.vgNovaPag = vgFP.vgContaPg
    Else
     If vgPagRef(vgFP.vgPagRef) < 0 Then
      GoSub ArrumaVetor
     Else
      If vgNumPg = G_IMP_PROX_PG Or vgNumPg > vgFP.vgContaPg Or (vgNumPg = 0 And vgModoInt = 0) Then
       If Not vgIniProc Then                  'se não estava procurando...
        vgIniProc = True                      'agora seta flag de procura
        vgFP.vgPagRef = vgFP.vgPagRef + 1
       Else                                   'usuário cancelou busca pela próxima página
        vgFP.vgPagRef = vgFP.vgPagRef - 1
       End If
      ElseIf vgNumPg = G_IMP_ANT_PG Or (vgNumPg > 0 And vgNumPg < vgFP.vgContaPg) Then
       If Not vgIniProc Then                  'se não estava procurando...
        vgIniProc = True                      'agora seta flag de procura
        vgFP.vgPagRef = vgFP.vgPagRef - 1
       Else                                   'usuário cancelou busca pela página anterior
        vgFP.vgPagRef = vgFP.vgPagRef + 1
       End If
      ElseIf vgNumPg = G_IMP_PRI_PG Or vgNumPg = 0 Then
       If vgPrimeiroCab Then
        vgFP.vgPagRef = 1
       Else
        vgFP.vgPagRef = vgFP.vgPagRef + 1
       End If
      ElseIf vgNumPg = G_IMP_ULT_PG Then
       If Not vgIniProc Then                  'se não estava procurando...
        vgIniProc = True                      'agora seta flag de procura
        vgFP.vgPagRef = UBound(vgPagRef())
       Else
        'usuário cancelou busca para última página, vamos procurar o último bookmark existente no intervalo de páginas especificado
        For j = UBound(vgPagRef()) To 1 Step -1           'vamos correr as páginas de referência, de trás para frente
         If vgPagRef(j) <= UBound(vgBookPg) Then         'se tem bookmark para a página correspondente
          vgFP.vgPagRef = j                               'vamos utilizar essa página
          Exit For
         End If
        Next
       End If
      End If
     End If
     vgFP.vgNovaPag = vgPagRef(vgFP.vgPagRef)             'pega o número de página real referente ao número da página no intervalo
     If vgFP.vgNovaPag = 0 Then GoTo CancelouRel          'ops... vamos sair do relatório
     If vgFP.vgNovaPag <> vgFP.vgContaPg Then             'se a página atual não for a página procurada
      If vgFP.vgNovaPag <= UBound(vgBookPg()) Then       'se tem bookmark para a página procurada
       vgFP.vgContaPg = vgFP.vgNovaPag                    'vamos posicionar diretamente na nova página
       Do While vgPodeVoltar(vgFP.vgContaPg) = False      'acerto para não deixar voltar página com quebra em filho
        vgFP.vgContaPg = vgFP.vgContaPg - 1
       Loop
       vgFP.vgProcuraPg = (vgFP.vgContaPg <> vgFP.vgNovaPag)
       Orcamento.BookMark = vgBookPg(vgFP.vgContaPg)      'seta o bookmark correto
       If Not vgEmPapel Then
        vgFP.picAux.Cls                                    'limpa a área
        vgFP.picAux.Picture = LoadPicture("")              'para imprimir a página
       End If
      Else                                                'não tem bookmark...
       vgFP.vgProcuraPg = True                            'então vamos procurar
      End If
     Else
      If Not vgEmPapel Then
       vgFP.picAux.Cls                                     'limpa a área
       vgFP.picAux.Picture = LoadPicture("")               'para imprimir a página
      End If
     End If
    End If
   ElseIf vgFP.vgNovaPag = vgFP.vgContaPg Then            'se a página atual é a página procurada
    vgFP.vgProcuraPg = False                              'vamos cancelar a procura!
   End If
   If vgModoInt = 0 Then                                  'se não tem intervalo de páginas especificado
    vgNumPag = vgFP.vgContaPg
    vgFP.vgPagRef = vgFP.vgContaPg                      'com o mesmo número para página de referência
   Else                                                   'senão... tem intervalo de página
    vgNumPag = vgFP.vgNovaPag                             'então pela o número da nova página
   End If
   vgPosLin = 26.71
   Imprime "Ficha Técnica - Nº.: " & Format(Orcamento![Seqüência do Orçamento], "000000"), 35.18, 1.32, "F=Courier New|W=700|S=15.75|JC=137.3", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -17.82, 27.24, "LIN=B0/" + Trim(Str(-17.82)) + "/" + Trim$(Str$(27.24)) + "/" + Trim(Str(197)) + "/" + Trim$(Str$(27.24)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime vgFP.picFixa(1), 5.5, 2.38, "FIG=FigFixa1.jpg/23.28/22.22", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Empresa..:", 35.5, 8.2, "F=Courier New|W=700|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Irrigação Penápolis Ind. e Com. Ltda", 60.1, 7.67, "F=Courier New|W=700|S=12", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "CNPJ.....:", 35.5, 11.9, "F=Courier New|W=700|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "02.781.892/0001-30", 60.1, 11.9, "F=Courier New|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Inscrição Estadual:", 106.13, 11.9, "F=Courier New|W=700|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "521.043.219.118", 153.88, 11.9, "F=Courier New|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Endereço.:", 35.5, 15.6, "F=Courier New|W=700|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Rd.Sg.Luciano Arnaldo Covolan, Km 0,315", 60.1, 15.6, "F=Courier New|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Fone:", 138.14, 19.84, "F=Courier New|W=700|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "(18)3654-2248", 151.23, 19.84, "F=Courier New|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Município:", 35.5, 20.1, "F=Courier New|W=700|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "CEP.:", 98.99, 20.1, "F=Courier New|W=700|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "16309-899", 112.8, 20.1, "F=Courier New|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Ilmo. Sr.............:", 0, 26.71, "F=Verdana|W=700|S=11.25|L=36", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Penápolis - SP", 59.78, 20.1, "F=Courier New|S=11.25", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -0.02, 44.04, "LIN=B0/" + Trim(Str(-0.02)) + "/" + Trim$(Str$(44.04)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(44.04)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Propriedade......:", 0, 32.01, "F=Verdana|W=700|S=11.25|L=38", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Município...........:", 0, 37.3, "F=Verdana|W=700|S=11.25|L=37", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Ficha Técnica", 139.15, 29.89, "F=Verdana|W=700|S=11.25|L=61|JC=60.84", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Irrigação Penapolis", 138.88, 35.18, "F=Verdana|W=700|S=11.25|L=61|JC=60.84", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -0.02, 49.33, "LIN=B0/" + Trim(Str(-0.02)) + "/" + Trim$(Str$(49.33)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(49.33)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime Orcamento!Hidroturbo, 0, 44.7, "F=Verdana|S=11.25|L=196", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Dados Técnicos Gerais", 0, 50.52, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Área aproximada a ser irrigada", 0, 57.14, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Horas Irrigada por dia", 0, 65.87, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Área Total Irrigada em", 0, 70.1, "F=Verdana|S=12|C=&H80000008&|L=49", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 0, 143.51, "LIN=B0/" + Trim(Str(0)) + "/" + Trim$(Str$(143.51)) + "/" + Trim(Str(197)) + "/" + Trim$(Str$(143.51)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Dados do Aspersor Canhão", 0, 79.62, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Marca/Modelo", 0, 90.47, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -0.11, 55.68, "LIN=B0/" + Trim(Str(-0.11)) + "/" + Trim$(Str$(55.68)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(55.68)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Diametro do Bocal", 0, 95.76, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Vazão Total", 0, 101.05, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Pressão de Serviço", 0, 106.34, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 101.05, 56.34, "LIN=B0/" + Trim(Str(101.05)) + "/" + Trim$(Str$(56.34)) + "/" + Trim(Str(101.05)) + "/" + Trim$(Str$(142.85)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "ha", 96.32, 57.14, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mm", 98.32, 61.64, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "h", 94.32, 65.87, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Dias", 99.32, 70.37, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m³/h", 100.32, 74.33, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mm", 98.32, 95.76, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m³/h", 100.32, 101.05, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 99.32, 106.34, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Precipitação Bruta", 0, 61.64, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Vazão Necessaria", 0, 74.33, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Tipo", 0, 85.71, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Alcance do Jato / Raio", 0.26, 111.37, "F=Verdana|S=12|C=&H80000008&|L=48", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m", 95.32, 111.37, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Espaçamento entre Carreadores", 0.26, 116.66, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m", 95.32, 116.66, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Comprimento da Faixa Irrigada", 0.26, 121.95, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m", 95.32, 121.95, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Velocidade de Deslocamento", 0.26, 127.24, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Precipitação Liquida", 0.26, 132.53, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Vazão Total por Turno de Rega", 0.26, 137.83, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m/h", 98.32, 127.24, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mm", 98.32, 132.53, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m³.", 98.32, 137.83, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Alturas Manométricas", 102.91, 50.52, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Desnível Maximo na área", 101.85, 57.14, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m", 193.47, 57.4, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Altura de Sucção", 101.85, 61.64, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m", 193.47, 61.64, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Altura do Aspersor", 101.85, 65.87, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m", 193.47, 65.87, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Perda de Carga (Adutora 1)", 101.85, 70.1, "F=Verdana|W=700|S=11.25|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Perda de Carga (Adutora 2)", 101.85, 74.33, "F=Verdana|W=700|S=11.25|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Perda de Carga (Tubo PE)", 101.85, 78.57, "F=Verdana|W=700|S=11.25|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 197.47, 70.1, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 197.47, 74.33, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 197.47, 78.57, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Perdas no Hidroturbo", 101.85, 82.8, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 197.47, 82.8, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Pressão no Bocal do Aspersor", 101.85, 87.03, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 197.47, 87.03, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Altura Manométrica Total", 101.85, 92.32, "F=Verdana|W=700|S=11.25|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 197.47, 92.32, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 100.95, 97.75, "LIN=B0/" + Trim(Str(100.95)) + "/" + Trim$(Str$(97.75)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(97.75)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Funcionamento do Sistema", 101.85, 98.67, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Tempo parado antes de Iniciar", 101.85, 106.08, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "h", 192.47, 106.08, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Vel. de Deslocamento(Canhão)", 101.85, 111.37, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m/h", 196.47, 111.37, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Tempo para Irrigar 01 Faixa", 101.85, 116.66, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "h", 192.47, 116.66, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Área Irrigada por Faixa", 101.85, 121.95, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "ha", 194.47, 121.95, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Nº de Faixas Irrigada /dia", 101.85, 127.24, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "un", 194.47, 128.04, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Área Irrigada por dia", 101.85, 132.53, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "ha", 194.47, 132.53, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Área Irrigada por Turno", 101.85, 137.83, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "ha", 194.47, 137.83, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Composição da Adutora e Tubo de Polietileno", 0.26, 143.93, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -0.02, 173.95, "LIN=B0/" + Trim(Str(-0.02)) + "/" + Trim$(Str$(173.95)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(173.95)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Trecho", 3.43, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "1", 8.73, 157.86, "F=Verdana|S=12|C=&H80000008&|JC=2.91", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "2", 8.73, 163.15, "F=Verdana|S=12|C=&H80000008&|JC=2.91", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "3", 8.73, 168.44, "F=Verdana|S=12|C=&H80000008&|JC=2.91", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 19.7, 148.94, "LIN=B0/" + Trim(Str(19.7)) + "/" + Trim$(Str$(148.94)) + "/" + Trim(Str(19.7)) + "/" + Trim$(Str$(173.54)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Comprimento", 22.48, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 53.57, 148.41, "LIN=B0/" + Trim(Str(53.57)) + "/" + Trim$(Str$(148.41)) + "/" + Trim(Str(53.57)) + "/" + Trim$(Str$(173.54)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 87.43, 148.41, "LIN=B0/" + Trim(Str(87.43)) + "/" + Trim$(Str$(148.41)) + "/" + Trim(Str(87.43)) + "/" + Trim$(Str$(173.54)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Material", 61.64, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 110.71, 148.41, "LIN=B0/" + Trim(Str(110.71)) + "/" + Trim$(Str$(148.41)) + "/" + Trim(Str(110.71)) + "/" + Trim$(Str$(173.54)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Diametro", 89.15, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mm", 101.5, 153.59, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Coef.", 116.66, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 132.93, 148.41, "LIN=B0/" + Trim(Str(132.93)) + "/" + Trim$(Str$(148.41)) + "/" + Trim(Str(132.93)) + "/" + Trim$(Str$(173.54)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -0.02, 148.7, "LIN=B0/" + Trim(Str(-0.02)) + "/" + Trim$(Str$(148.7)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(148.7)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Vazão", 138.88, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m³/h", 149, 153.59, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 157.27, 148.41, "LIN=B0/" + Trim(Str(157.27)) + "/" + Trim$(Str$(148.41)) + "/" + Trim(Str(157.27)) + "/" + Trim$(Str$(173.54)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Hf Total", 158.73, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 178.43, 148.41, "LIN=B0/" + Trim(Str(178.43)) + "/" + Trim$(Str$(148.41)) + "/" + Trim(Str(178.43)) + "/" + Trim$(Str$(173.54)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Veloc.", 182.01, 149.22, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "(m/s)", 193.12, 153.59, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m", 38.18, 153.59, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Ponto de Funcionamento da Bomba", 0.26, 174.85, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Marca", 0.26, 179.64, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Modelo", 0.26, 183.88, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Número de Rotores", 0.26, 188.11, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Diametro do(s) Rotor(es)", 0.26, 192.23, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Vazão Prevista", 0.26, 196.4, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Pressão Prevista", 0.26, 200.59, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Rendimento", 0.26, 204.83, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Rotação", 0.26, 209.06, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Potência absorvida no Eixo", 0.26, 213.29, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -0.02, 218.95, "LIN=B0/" + Trim(Str(-0.02)) + "/" + Trim$(Str$(218.95)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(218.95)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mm", 90.92, 192.23, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "m³/h", 92.92, 196.4, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "mca", 91.92, 200.59, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "%", 88.97, 205.53, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "rpm", 90.92, 209.06, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "cv", 87.92, 212.94, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", 98.14, 174.86, "LIN=B0/" + Trim(Str(98.14)) + "/" + Trim$(Str$(174.86)) + "/" + Trim(Str(98.14)) + "/" + Trim$(Str$(219.31)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Marca", 99.73, 183.49, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Modelo", 99.73, 187.72, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Potencia Nominal", 99.73, 191.95, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Dados do Motor", 99.73, 174.85, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Tipo", 99.73, 196.19, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   If Mid(Orcamento![Marca Do Motor], 1, 3) = "Weg" Then
      Imprime "Fator", 99.73, 200.42, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   End If
   Imprime "Rotação", 99.73, 204.65, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Motor", 99.73, 179.08, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Estacionário", 142.48, 196.19, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   If Mid(Orcamento![Marca Do Motor], 1, 3) = "Weg" Then
      Imprime "1.25", 142.48, 200.42, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   End If
   Imprime "rpm", 173.19, 204.88, "F=Verdana|S=9|C=&H80000008&|JD", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "", -0.02, 253.04, "LIN=B0/" + Trim(Str(-0.02)) + "/" + Trim$(Str$(253.04)) + "/" + Trim(Str(196.98)) + "/" + Trim$(Str$(253.04)), vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Caracteristicas do Carretel", 0.26, 219.84, "F=Verdana|W=700|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Modelo", 0.26, 226.19, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Eixos", 0.26, 231.48, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Rodas", 0.26, 236.77, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Pneus", 0.26, 242.06, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime "Tubo PE", 0.26, 247.35, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   Imprime vgFP.picFixa(2), 141.79, 224.33, "FIG=FigFixa2.jpg/45.5/22.22", vgObSaida, , , , vgFP.vgProcuraPg
   If Mid(Orcamento![Marca Do Motor], 1, 3) = "Weg" Then
      Imprime "Consumo Estimado", 99.73, 209.52, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
   End If
   If vgFP.vgContaPg = 1 Then
      Imprime IIf(Orcamento![Seqüência Do Geral] > 0, Orcamento![Razão Social], Orcamento![Nome Cliente]), 38.62, vgPosLin, "F=Verdana|S=11.25|L=103", vgObSaida, "@x", , , vgFP.vgProcuraPg
      Imprime Propriedade(), 38.62, vgPosLin + 5.29, "F=Verdana|S=11.25|L=104", vgObSaida, "@x", , , vgFP.vgProcuraPg
      Imprime MunProp(), 38.62, vgPosLin + 10.58, "F=Verdana|S=11.25|L=104", vgObSaida, "@x", , , vgFP.vgProcuraPg
      Imprime Orcamento![Area irrigada], 90.07, vgPosLin + 30.42, "F=Verdana|S=12|L=25|JD", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Precipitação bruta], 90.13, vgPosLin + 34.92, "F=Verdana|S=12|L=24|JD", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Horas irrigada], 90.25, vgPosLin + 39.15, "F=Verdana|S=12|L=22|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Area tot irrigada em], 89.89, vgPosLin + 43.38, "F=Verdana|S=12|L=19|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime VazaoAux(), 90.19, vgPosLin + 47.61, "F=Verdana|S=12|L=23|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento!Aspersor, 89.62, vgPosLin + 58.99, "F=Verdana|S=12|L=51|JD", vgObSaida, , , , vgFP.vgProcuraPg
      Imprime Orcamento![Modelo do aspersor], 89.74, vgPosLin + 63.75, "F=Verdana|S=12|L=49|JD", vgObSaida, , , , vgFP.vgProcuraPg
      Imprime Orcamento![Bocal Diametro], 90.19, vgPosLin + 69.04, "F=Verdana|S=12|L=23|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime VazaoAux(), 90.19, vgPosLin + 74.33, "F=Verdana|S=12|L=23|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Pressão de serviço], 90.19, vgPosLin + 79.62, "F=Verdana|S=12|L=23|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Alcance do jato], 90.37, vgPosLin + 84.65, "F=Verdana|S=12|L=20|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Espaço entre carreadores], 90.37, vgPosLin + 89.94, "F=Verdana|S=12|L=20|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime VelocidadeDesloca(), 89.25, vgPosLin + 100.52, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime PrecipLiq(), 89.81, vgPosLin + 105.82, "F=Verdana|S=12|L=25|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      'Imprime VazaoTurno(), 89.19, vgPosLin + 111.11, "F=Verdana|S=12|L=22|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime VazaoTurno(), 89.19, vgPosLin + 111.11, "F=Verdana|S=12|L=22|JD", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Desnivel maximo na area], 187.96, vgPosLin + 30.42, "F=Verdana|S=12|L=25|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Altura de sucção], 188.07, vgPosLin + 34.92, "F=Verdana|S=12|L=23|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Altura do aspersor], 187.48, vgPosLin + 39.15, "F=Verdana|S=12|L=15|JD", vgObSaida, "99,99", , , vgFP.vgProcuraPg
      Imprime HF1(), 187.4, vgPosLin + 43.38, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime HF2(), 187.4, vgPosLin + 47.61, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime HF3(), 187.4, vgPosLin + 51.85, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime 0.9, 187.4, vgPosLin + 56.08, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Pressão de serviço], 187.4, vgPosLin + 60.31, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime AlturaManometrica(), 187.4, vgPosLin + 65.6, "F=Verdana|W=700|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Tempo parado antes percurso], 187.54, vgPosLin + 79.36, "F=Verdana|S=12|L=14|JD", vgObSaida, "99,99", , , vgFP.vgProcuraPg
      Imprime VelocidadeDesloca(), 187.4, vgPosLin + 84.65, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime TempoFx1(), 187.4, vgPosLin + 89.94, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime AreaporFx(), 187.4, vgPosLin + 95.23, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime FaixasIrrigadas(), 187.4, vgPosLin + 100.52, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime areapordia(), 187.4, vgPosLin + 105.82, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Area irrigada], 187.4, vgPosLin + 111.11, "F=Verdana|S=12|L=21|JD", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Com 1], 26.19, vgPosLin + 131.14, "F=Verdana|S=12|L=23|JC=22.75", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Com 2], 26.19, vgPosLin + 136.5, "F=Verdana|S=12|L=23|JC=22.75", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Material1(), 55.29, vgPosLin + 131.14, "F=Verdana|S=12|L=30|JC=30.42", vgObSaida, "@!", , , vgFP.vgProcuraPg
      Imprime Material2(), 55.29, vgPosLin + 136.5, "F=Verdana|S=12|L=30|JC=30.42", vgObSaida, "@!", , , vgFP.vgProcuraPg
      Imprime Material3(), 55.29, vgPosLin + 141.72, "F=Verdana|S=12|L=30|JC=30.42", vgObSaida, "@!", , , vgFP.vgProcuraPg
      Imprime Diam1(), 89.41, vgPosLin + 131.21, "F=Verdana|S=12|L=20|JC=19.57", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Diam2(), 89.41, vgPosLin + 136.5, "F=Verdana|S=12|L=20|JC=19.57", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Diam3(), 89.41, vgPosLin + 141.79, "F=Verdana|S=12|L=20|JC=19.57", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Coef1(), 112.43, vgPosLin + 131.14, "F=Verdana|S=12|L=20|JC=19.84", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Coef2(), 112.43, vgPosLin + 136.43, "F=Verdana|S=12|L=20|JC=19.84", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Coef3(), 112.43, vgPosLin + 141.72, "F=Verdana|S=12|L=20|JC=19.84", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      If Orcamento![Com 1] > 0 Then
         Imprime VazaoAux(), 134.92, vgPosLin + 131.21, "F=Verdana|S=12|L=21|JC=20.63", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      End If
      If Orcamento![Com 2] > 0 Then
         Imprime VazaoAux(), 134.92, vgPosLin + 136.5, "F=Verdana|S=12|L=21|JC=20.63", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      End If
      If Orcamento![Com 3] > 0 Then
         Imprime VazaoAux(), 134.92, vgPosLin + 141.79, "F=Verdana|S=12|L=21|JC=20.63", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      End If
      Imprime HF1(), 158.73, vgPosLin + 131.21, "F=Verdana|S=12|L=19|JC=19.04", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime HF2(), 158.73, vgPosLin + 136.5, "F=Verdana|S=12|L=19|JC=19.04", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime HF3(), 158.73, vgPosLin + 141.53, "F=Verdana|S=12|L=19|JC=19.04", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Velo1(), 179.25, vgPosLin + 131.21, "F=Verdana|S=12|L=17|JC=16.66", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Velo2(), 179.25, vgPosLin + 136.5, "F=Verdana|S=12|L=17|JC=16.66", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Velo3(), 179.25, vgPosLin + 141.53, "F=Verdana|S=12|L=17|JC=16.66", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Marca bomba], 60.58, vgPosLin + 152.64, "F=Verdana|S=12|L=35", vgObSaida, "@!", , , vgFP.vgProcuraPg
      Imprime Orcamento![Modelo bomba], 60.58, vgPosLin + 156.87, "F=Verdana|S=12|L=35", vgObSaida, "@!", , , vgFP.vgProcuraPg
      Imprime Orcamento![N estagios], 60.58, vgPosLin + 161.39, "F=Verdana|S=12|L=10", vgObSaida, "99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Diametro bomba], 60.58, vgPosLin + 165.52, "F=Verdana|S=12|L=23", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime VazaoAux(), 60.58, vgPosLin + 169.68, "F=Verdana|S=12|L=23", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime AlturaManometrica(), 60.58, vgPosLin + 173.88, "F=Verdana|S=12|L=21", vgObSaida, "9.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Rendimento bomba], 60.58, vgPosLin + 178.11, "F=Verdana|S=12|L=21", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Rotação bomba], 60.84, vgPosLin + 182.34, "F=Verdana|S=12|L=20", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime VazaoAux * AlturaManometrica / 2.7 / Orcamento![Rendimento bomba], 60.58, vgPosLin + 186.57, "F=Verdana|S=12|L=20", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Marca Do Motor], 142.48, vgPosLin + 156.77, "F=Verdana|S=12|L=54", vgObSaida, "@!", , , vgFP.vgProcuraPg
      Imprime Orcamento![Modelo Motor], 142.48, vgPosLin + 161.11, "F=Verdana|S=12|L=54", vgObSaida, "@!", , , vgFP.vgProcuraPg
      Imprime Orcamento![Potencia Nominal], 142.48, vgPosLin + 165.23, "F=Verdana|S=12|L=23", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime IIf(Mid(Orcamento![Marca Do Motor], 1, 3) = "Weg", "ELÉTRICO", "DIESEL"), 142.48, vgPosLin + 152.36, "F=Verdana|S=12|C=&H80000008&", vgObSaida, , , , vgFP.vgProcuraPg
      Imprime Orcamento![Rotação bomba], 142.48, vgPosLin + 178.16, "F=Verdana|S=12|L=20", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      Imprime Orcamento![Modelo hidroturbo], 21.16, vgPosLin + 199.47, "F=Verdana|S=12|L=94", vgObSaida, , , , vgFP.vgProcuraPg
      Imprime Orcamento!Eixos, 21.16, vgPosLin + 205.02, "F=Verdana|S=12|L=6", vgObSaida, "99", , , vgFP.vgProcuraPg
      Imprime Orcamento!Rodas, 21.16, vgPosLin + 210.05, "F=Verdana|S=12|L=6", vgObSaida, "99", , , vgFP.vgProcuraPg
      Imprime Orcamento!Pneus, 21.16, vgPosLin + 215.6, "F=Verdana|S=12|L=66", vgObSaida, , , , vgFP.vgProcuraPg
      Imprime Orcamento!Tubos, 21.16, vgPosLin + 220.63, "F=Verdana|S=12|L=54", vgObSaida, , , , vgFP.vgProcuraPg
      If Mid(Orcamento![Marca Do Motor], 1, 3) = "Weg" Then
         Imprime Orcamento![Potencia Nominal] * 0.736, 142.48, vgPosLin + 182.8, "F=Verdana|S=12|L=20", vgObSaida, "99.999,99", , , vgFP.vgProcuraPg
      End If
      vgPosLin = vgPosLin + 95.23
      vgDifProxReg = 0
   End If
   vgPrimeiroCab = False
   vgTemFimRel = False
   Return

SalvaInicioPg:
   If (vgPV Or vgFP.vgContaPg + 1 > UBound(vgBookPg)) And (vgTemFimRel Or Not Orcamento.EOF) Then 'testa se precisa mais variáveis
      If vgFP.vgContaPg + 1 > UBound(vgBookPg) Then
         ReDim Preserve vgBookPg(vgFP.vgContaPg + 1) As Variant                                   'cria variável para salvar bookmark
         ReDim Preserve vgPodeVoltar(vgFP.vgContaPg + 1) As Boolean                               'controle de quebra em filhos
      End If
      If Not Orcamento.EOF Then
         vgBookPg(vgFP.vgContaPg + 1) = Orcamento.BookMark                                        'salva inicio desta página
      Else
         vgBookPg(vgFP.vgContaPg + 1) = ""
         vgPodeVoltar(vgFP.vgContaPg + 1) = True                                                  'pode voltar preview para esta página?
      End If
      vgPodeVoltar(vgFP.vgContaPg + 1) = vgPagOk Or vgPrimeiroCab                                 'pode voltar preview para esta página?
   End If
   If Not vgPriVez Then
      vgPagOk = False
   End If
   Return

SalvaPagina:
   If Not vgEmPapel Or (vgEmPapel And vgNumPg = 0) Then
      With vgFP
         If .vgFimDoArq = False And Orcamento.EOF Then
            .vgFimDoArq = True
         End If
         Ok = ((((vgTemFimRel Or .vgFimDoArq = False) Or .vgContaPg < .vgUltPagVista) And vgModoInt = 0) Or ((.vgPagRef < UBound(vgPagRef())) And vgModoInt = 1)) And Not .vgProcuraPg
         If Ok <> .botMais.Enabled Then
            .botMais.Enabled = Ok                 'habilita/desabilita botões do preview
         End If
         Ok = .botMais.Enabled And Not .vgProcuraPg
         If Ok <> .botUltimo.Enabled Then
            .botUltimo.Enabled = Ok
         End If
         Ok = (.vgPagRef > 1 And Not .vgProcuraPg)
         If Ok <> .botVolta.Enabled Then
            .botVolta.Enabled = Ok
         End If
         Ok = (.vgPagRef > 1 And Not .vgProcuraPg)
         If Ok <> .botPrimeiro.Enabled Then
            .botPrimeiro.Enabled = Ok
         End If
         GoSub SalvaInicioPg
         If .vgProcuraPg Or (.vgContaPg <> .vgNovaPag And .vgNovaPag <> 0) Then 'procurando pg adiante...
            If .vgProcuraPg And ((vgModoInt = 0 And (Not vgTemFimRel And Orcamento.EOF)) Or .vgContaPg = .vgNovaPag) Then
               .ShowPreview                       'mostra preview
            Else
               .picAux.Cls                        'limpa a área para a próxima pg
               vgPosLin = vgLimiteInf + 99        'força um cabec na próxima vez
            End If
         Else
            .ShowPreview
         End If
      End With
   End If
   Return
'retira as páginas inválidas do intervalo especificado!
ArrumaVetor:
   vgQt = 0
   j = 0
   k = 0
   For i = 1 To UBound(vgPagRef())
      If vgPagRef(i) < 0 Or (Abs(vgPagRef(i)) >= k And k > 0) And i < UBound(vgPagRef()) - vgQt + 1 Then
         If vgPagRef(i) < k And vgPagRef(i) <> 0 Then k = Abs(vgPagRef(i))
         For j = 1 To UBound(vgPagRef())
            If Abs(vgPagRef(j)) >= k And j <= UBound(vgPagRef()) - vgQt + 1 Then
               vgQt = vgQt + 1
               For m = j + 1 To UBound(vgPagRef())
                  vgPagRef(m - 1) = vgPagRef(m)
               Next
               If j <= UBound(vgPagRef()) - vgQt Then
                  j = j - 1
               End If
            End If
         Next
         If i < UBound(vgPagRef()) Then
            i = i - 1
         End If
      End If
   Next
   ReDim Preserve vgPagRef(UBound(vgPagRef()) - vgQt) As Integer
   
   If vgFP.vgPagRef > UBound(vgPagRef()) Then
      vgFP.vgPagRef = UBound(vgPagRef())
   End If
   Return

RestauraPag:
   vgFP.txtPag.Text = CStr(vgPagOrig)
   vgFP.botPara.Enabled = False
   vgFP.vgProcuraPg = False
   If vgPagOrig < vgFP.vgContaPg Then             'se não for a última página, vamos restaurar o bookmark para atualizar os botões do preview
      Orcamento.BookMark = vgBookPg(vgPagOrig)
   End If
   vgFP.vgContaPg = vgPagOrig
   vgFP.vgPagRef = vgPagOrig
   Return

IniciaImpressao:
   On Error Resume Next                           'algumas impressoras não tem certas propriedades
   If vgEmPapel Then
      With Printer                                'salva configs da impressora
         vgPsm = .ScaleMode
         vgPor = .Orientation
         vgPsz = .PaperSize
         vgPfn = .FontName
         .PaperSize = vbPRPSA4
         .Orientation = vbPRORPortrait
         If Err Then Err.Clear
         If vgNumPg <> 0 Then                     'procurando pg para imprimir
            .Copies = 1
         Else
            .Copies = vgCopias                    'número de cópias configurada no diálogo
            If Err And vgNCop = 0 Then vgNCop = vgCopias
         End If
      End With
   End If
   With vgObSaida.Font
      'ajusta para nós...
      .Name = "MS Sans Serif"
      .Charset = 0
      .Weight = 400
      .Size = 8.25
      .Underline = 0
      .Italic = 0
      .Strikethrough = 0
      vgObSaida.ForeColor = &H0
      vgObSaida.ScaleMode = vbMillimeters         'vamos trabalhar em mm
   End With
   On Error GoTo DeuErro                          'vamos cercar erros...
   Return

NaoAchouPg:
   GoSub SalvaPagina
   vgFP.txtPag.Text = CStr(vgPagOrig)
   MsgBox "A página especificada não foi encontrada no relatório!", vbExclamation
   GoTo FimDaSub

DeuErro:                                          'deu um erro
   Select Case Err                                'vamos verificar se deu algum erro
      Case 3197                                   'registro acabou de ser alterado por outro usuário
         Resume
      Case 3046, 3158, 3186, 3187, 3188, 3189, 3218, 3260
         vgNVez = vgNVez + 1                      'outro usuário acessando
         If vgNVez <= 10 Then                     'vamos tentar 10 vezes
            Delay 0.5                             'mais antes espera 1/2 segundo
            Resume                                'antes de tentar
         End If
   End Select
   If Err <> 65524 Then                           'se não for um erro de crítica
      CErr.NumErro = Err
      CErr.Show
   End If
   vgPrimeiroCab = 2                              'flag para não dar a msg novamente

SaiDaSub:                                         'saída comum da sub...

FimDaSub:
   If Not vgFG Is Nothing Then
      Unload vgFG
      Set vgFG = Nothing
   End If
   Err.Clear
   Screen.MousePointer = vbDefault                'ponteiro do mouse = default
End Sub

'evento - configura impressora
Private Sub botConfImp_Click()
   Dim x As String
   ConfigImpressora                               'chama diáglogo de configuração impressora
   x$ = Printer.DeviceName
   Label(4).Caption = x$
End Sub

'evento - valida digitações e prossegue a execução
Private Sub botOk_Click()
   Dim k As String
   If vgPriVez Then Exit Sub
   vgPriVez = True
   k$ = Executar(VALIDACOES)                      'faz validaçao dos campos
   If Len(k$) > 0 Then                            'EPA!... tem campo errado
      If InStr(k$, "|") > 0 Then
         Err.Source = Parse$(k$, "|")
         Err.Number = Val(Parse$(k$, "|"))        'deu erro
         Err.Description = Parse$(k$, "|")
         CErr.NumErro = Err.Number
         CErr.Show
      Else
         Beep                                     'manda aviso sonoro
         MsgBox k$, vbCritical, vgAtencao$        'mostra mensagem do erro
      End If
      Screen.MousePointer = vbDefault             'reseta o pointer do mouse
      vgPriVez = False
      Exit Sub                                    'e sai para continuar a ediçao ou inclusao
   End If                                         'OK. os campos estao certos
   vgFP.vgFimDoArq = False                        'é fim do arquivo
   vgFP.vgContaPg = 0                             'contador de paginas
   vgFP.vgNovaPag = 0                             'número da página real dentro do intervalo (Ex: 3;5;1;2 - se estiver na página real 5, a página atual será 2)
   vgFP.vgPagRef = 0                              'número da página de referência
   vgFP.vgUltPagVista = 0                         'ate onde ja fomos...
   If vgDestRel = 0 Then                          'onde vai ser gerado (janela ou papel)
      vgFP.cboEscala.ListIndex = 3                'escal 100%
      ProssegueExecucao vgFP.picAux               'faz preview
   Else
      vgFP.vgContaPg = 0
      ProssegueExecucao Printer                   'joga direto na impressora
   End If
   If vgPrimeiroCab <> 2 Then                     'se não deu erro
      If vgPrimeiroCab Then                       'nenhuma página foi impressa
         MsgBox LoadGasString(92), vbExclamation, vgAtencao$ 'apresenta a mensagem
      ElseIf vgDestRel = 0 Then
         vgFP.ShowPreview                                    'arruma form preview
         vgFP.Visible = True                                 'mostra form de preview
         Visible = False                                     'esconde o este form
         vgVisivel = False                                   'e seta variavel
      End If
   End If
   vgPriVez = False
End Sub

'evento - cancela formulário
Private Sub botCancela_Click()
   Unload Me
End Sub

'evento - antes de descarregar o formulário
Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
   Cancel = Cancel Or (Not vgFG Is Nothing)
End Sub

'evento - descarregando o formulário da memória
Private Sub Form_Unload(Cancel As Integer)
   Dim i As Integer
   On Error Resume Next
   FinalizaForm Me
   Unload vgFP.picFixa(1)
   Unload vgFP.picFixa(2)
   Set txtvgDestRel = Nothing
   Set txtOrcamento = Nothing
   Set lblAjuste = Nothing
   For i = 0 To UBound(txtCampo)
      txtCampo(i).Finalize
      Set txtCampo(i) = Nothing
   Next
   If Not Orcamento Is Nothing Then
      Orcamento.CloseRecordset
      Set Orcamento = Nothing
   End If
   Set vgFG = Nothing
   Set vgTooltips = Nothing
   Set vgFP.vgFormRel = Nothing                   'variável associada a este form
   Unload vgFP                                    'descarrega o form de preview
   Set vgFP = Nothing                             'tira o form de preview da memória
   Set frmRelfxhid = Nothing                      'libera o segmento de código do form
   If vgRelAtivo = vgFormID Then vgRelAtivo = 0
End Sub

'evento - quando qq tecla for digitada no formulário
Private Sub Form_KeyPress(KeyAscii As Integer)
   If KeyAscii = vbKeyEscape Then                 'se teclou ESC
      Unload Me                                   'tira este form da memória
   End If
End Sub


'evento - quando o valor da rolagem modificar
Private Sub scrVtxtCampo1_Change()
   txtCampo(1).ScrChange
End Sub

'evento - quando o botão for apertado
Private Sub bottxtCampo2_Click(Index As Integer)
   txtCampo(2).SetFocus
   DoEvents
   txtCampo(2).BotClick Index
End Sub

'evento - quando o mouse for pressionado sobre o campo
Private Sub txtCp_MouseDown(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)
   txtCampo(Index).MouseDown
End Sub

